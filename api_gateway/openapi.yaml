openapi: 3.0.3
info:
  title: API Gateway
  version: "1.0.0"
servers:
  - url: http://localhost:8000
paths:
  /register:
    post:
      description: Принимает запрос на регистрацию и проксирует его в User Service.
      requestBody:
        description: Данные для регистрации.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Пользователь успешно зарегистрирован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '400':
          description: Ошибка регистрации.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /login:
    post:
      description: Принимает запрос на вход, проксирует его в User Service, и при успешной аутентификации генерирует JWT токен.
      requestBody:
        description: Данные для входа.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Аутентификация успешна, возвращается JWT токен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
        '401':
          description: Неверные учетные данные.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /profile:
    get:
      description: Возвращает данные профиля для аутентифицированного пользователя.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Профиль успешно получен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401':
          description: Неавторизованный доступ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Пользователь не найден.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Обновляет данные профиля для аутентифицированного пользователя.
      security:
        - bearerAuth: []
      requestBody:
        description: Данные для обновления профиля.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdateRequest'
      responses:
        '200':
          description: Профиль успешно обновлен.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Неавторизованный доступ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Пользователь не найден.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
          format: email
      required:
        - username
        - password
        - email
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    AuthToken:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
          example: bearer
    ProfileUpdateRequest:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        birth_date:
          type: string
          format: date
        mail:
          type: string
          format: email
        phone:
          type: string
    UserInfo:
      type: object
      properties:
        user_id:
          type: integer
        username:
          type: string
        email:
          type: string
          format: email
    UserProfile:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        birth_date:
          type: string
          format: date
          nullable: true
        mail:
          type: string
          format: email
          nullable: true
        phone:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Error:
      type: object
      properties:
        detail:
          type: string
