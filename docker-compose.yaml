services:
  user_db:
    image: postgres:14
    container_name: user_db
    environment:
      - POSTGRES_DB=users_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5433:5432"
    volumes:
      - user_db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d users_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  user_service:
    build: ./user_service
    container_name: user_service
    environment:
      - USER_DB_URL=postgresql://user:password@user_db:5432/users_db
    depends_on:
      user_db:
        condition: service_healthy
    ports:
      - "8001:8001"

  posts_db:
    image: postgres:14
    container_name: posts_db
    environment:
      - POSTGRES_DB=posts_db
      - POSTGRES_USER=posts_user
      - POSTGRES_PASSWORD=posts_password
    ports:
      - "5533:5432"
    volumes:
      - posts_db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U posts_user -d posts_db" ]
      interval: 10s
      timeout: 5s
      retries: 5


  posts_service:
    build: ./posts_comments_service
    container_name: posts_service
    environment:
      - POSTS_DB_URL=postgresql://posts_user:posts_password@posts_db:5432/posts_db
    depends_on:
      posts_db:
        condition: service_healthy
      kafka:
        condition: service_started

    ports:
      - "50051:50051"

  api_gateway:
    build: ./api_gateway
    container_name: api_gateway
    depends_on:
      - user_service
      - posts_service
      - kafka
    environment:
      - USER_SERVICE_URL=http://user_service:8001
      - JWT_SECRET_KEY=SUPER_SECRET_KEY
    ports:
      - "8000:8000"
  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
    ports:
      - "9092:9092"
      - "9093:9093"
    networks:
      - default

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPERS=
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    links:
      - kafka
    networks:
      - default

volumes:
  user_db_data:
  posts_db_data:

networks:
  default:
    driver: bridge
